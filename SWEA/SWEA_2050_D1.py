# 알파벳으로 이루어진 문자열을 입력받아 1 - 26까지의 숫자로 변환하기
# 전제: 대문자로만 입력받는다

# 입력받을 문자열 생성
S = input()

# 하나씩 문자를 꺼내오기
for char in S:
    # 대문자 알파벳 A, 아스키코드 시작점이 65인데 A = 1로 치환되어야 하니
    # 문자열을 ord()로 아스키코드로 변환해 준 다음 64만큼 빼준다
    # 각 출력문이 일렬로 나와야하기 때문에 end=를 공백으로 지정해준다
    print(ord(char) - 64, end=' ')



'''
아래는 내가 처음 접근한 방식이다. 출력문은 정상적으로 잘 나오는데 오답처리됐다.


# 입력받을 문자열 변수 생성
S = input()

# 대문자 알파벳의 string list을 아스키코드를 이용하여 생성
alphabet = list(map(chr, range(65, 91)))

# 숫자로 변환된 문자열 값을 저장할 공백 리스트 생성
number_output = []

# 알파벳의 인덱스 값을 호출
for i in range(len(alphabet)):
    # S에서 문자를 하나씩 호출
    for char in S:
        # 인덱스 값의 알파벳과 문자열 속 문자가 같은 값이라면
        if alphabet[i] == char:
            # 공백 리스트에 인덱스 값 + 1 (인덱스 범위는 0 - 25 이기 때문에)
            # 문자가 나타나는 순서대로 추가해준다 
            number_output.append(i + 1)

# 리스트의 대괄호를 '*'로 풀어주고 원소들의 구분을 공백으로 지정해준다
print(*number_output, sep=' ')

'''
